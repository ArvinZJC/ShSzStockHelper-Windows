<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BusyIndicatorHomeWindowLoading_Header" xml:space="preserve">
    <value>初始化中...</value>
  </data>
  <data name="BusyIndicatorSearchResultArea_Header" xml:space="preserve">
    <value>搜索中...</value>
  </data>
  <data name="ButtonClearSelection_Label" xml:space="preserve">
    <value>取消选择的行</value>
  </data>
  <data name="ButtonExportToExcel_Label" xml:space="preserve">
    <value>导出到Excel</value>
  </data>
  <data name="ButtonPrint_Label" xml:space="preserve">
    <value>打印</value>
  </data>
  <data name="ButtonPrint_ToolTip" xml:space="preserve">
    <value>点击打开打印预览，进行打印前的配置</value>
  </data>
  <data name="ButtonRestoreColumnWidth_Label" xml:space="preserve">
    <value>还原列宽</value>
  </data>
  <data name="ButtonSearch_ToolTip" xml:space="preserve">
    <value>点击搜索</value>
  </data>
  <data name="DatePickerEndDate_ToolTip" xml:space="preserve">
    <value>点击日历图标来选择结束日期。除此之外，选择日期后，您也可以在输入框中编辑日期（年-月-日）</value>
  </data>
  <data name="DatePickerEndDate_WaterMark" xml:space="preserve">
    <value>结束日期</value>
  </data>
  <data name="DatePickerStartDate_ToolTip" xml:space="preserve">
    <value>点击日历图标来选择开始日期。除此之外，选择日期后，您也可以在输入框中编辑日期（年-月-日）</value>
  </data>
  <data name="DatePickerStartDate_WaterMark" xml:space="preserve">
    <value>开始日期</value>
  </data>
  <data name="DayVolume" xml:space="preserve">
    <value>每日成交量</value>
  </data>
  <data name="Fri" xml:space="preserve">
    <value>五</value>
  </data>
  <data name="LeftBracket" xml:space="preserve">
    <value>（</value>
  </data>
  <data name="Mon" xml:space="preserve">
    <value>一</value>
  </data>
  <data name="PriceUnit" xml:space="preserve">
    <value>元</value>
  </data>
  <data name="QuestionMark" xml:space="preserve">
    <value>？</value>
  </data>
  <data name="RightBracket" xml:space="preserve">
    <value>）</value>
  </data>
  <data name="Sat" xml:space="preserve">
    <value>六</value>
  </data>
  <data name="SaveFileDialogueExportToExcel_Filter" xml:space="preserve">
    <value>Excel 97-2003 工作簿(*.xls)|*.xls|Excel 工作簿(*.xlsx)|*.xlsx</value>
  </data>
  <data name="StrikePrice" xml:space="preserve">
    <value>成交价</value>
  </data>
  <data name="Sun" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="TabItemStrikePriceVolume_Header_NewTab" xml:space="preserve">
    <value>新标签页</value>
  </data>
  <data name="TextBlockNewTabHint_Text" xml:space="preserve">
    <value>点击左上方的“+”按钮新建标签页，开始搜索吧！</value>
  </data>
  <data name="TextBlockNullData_Text_AccessDenied" xml:space="preserve">
    <value>未查询到数据！数据提供方拒绝了您的访问，解封一般需要您等待5~60分钟。这可能是因为您搜索频率过高。请您降低搜索频率，并建议您起止日期的间隔时长不超过1个月。</value>
  </data>
  <data name="TextBlockNullData_Text_ImproperDateRange" xml:space="preserve">
    <value>未查询到数据！数据提供方反馈所查时间段过长。请您修改起止日期，两日期的间隔时长建议不超过1个月，最长不应超过9个月。</value>
  </data>
  <data name="TextBlockNullData_Text_UnknownError" xml:space="preserve">
    <value>未知错误。请提交反馈，以便帮助开发者优化用户体验。</value>
  </data>
  <data name="TextBlockNullData_Text_WrongFilters" xml:space="preserve">
    <value>未查询到数据！搜索条件有误，或数据提供方没有相关数据。您可检查股票所属公司上市状态、股票代码是否正确、所查时间段是否处于股市休市期。</value>
  </data>
  <data name="TextBoxSymbol_ToolTip" xml:space="preserve">
    <value>股票代码应以上市交易所代码开头（支持SH和SZ，大小写不限）接6位数字。股票名称在输入框失去焦点后会自动转换成对应的代码（如果有）</value>
  </data>
  <data name="TextBoxSymbol_WaterMark" xml:space="preserve">
    <value>股票代码</value>
  </data>
  <data name="Thu" xml:space="preserve">
    <value>四</value>
  </data>
  <data name="TotalVolume" xml:space="preserve">
    <value>总成交量</value>
  </data>
  <data name="Tue" xml:space="preserve">
    <value>二</value>
  </data>
  <data name="VolumeUnit_1" xml:space="preserve">
    <value>手</value>
  </data>
  <data name="VolumeUnit_10000" xml:space="preserve">
    <value>万手</value>
  </data>
  <data name="Wed" xml:space="preserve">
    <value>三</value>
  </data>
</root>