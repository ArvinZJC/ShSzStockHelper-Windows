<!-- UI definition of the tab of searching for data of strike prices and volumes. -->
<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:property="clr-namespace:ShSzStockHelper.Properties"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:syncfusionControls="clr-namespace:Syncfusion.Windows.Controls;assembly=Syncfusion.Shared.WPF"
             xmlns:syncfusionNotification="clr-namespace:Syncfusion.Windows.Controls.Notification;assembly=Syncfusion.SfBusyIndicator.WPF"
             xmlns:syncfusionPrimitives="clr-namespace:Syncfusion.Windows.Controls.Primitives;assembly=Syncfusion.Shared.WPF"
             xmlns:syncfusionSkin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             d:DesignHeight="{Binding MinWindowHeight, Source={StaticResource StyleProperties}}"
             d:DesignWidth="{Binding MinWindowWidth, Source={StaticResource StyleProperties}}"
             mc:Ignorable="d"
             syncfusionSkin:SfSkinManager.VisualStyle="{Binding AppTheme, Source={StaticResource StyleProperties}}"
             x:Class="ShSzStockHelper.StrikePriceVolumeTab"
             Background="White">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            Background="Transparent"
            Margin="15,0,15,0">
            <Grid>
                <Grid.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/ButtonAdv/ButtonAdv.xaml" />
                            <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/DateTimeEdit/DateTimeEdit.xaml" />
                            <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/MSControl/Tooltip.xaml" />
                            <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/SfTextBoxExt/SfTextBoxExt.xaml" />
                        </ResourceDictionary.MergedDictionaries>

                        <DataTemplate x:Key="TextboxWatermarkTemplate">
                            <TextBlock FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                       FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                       Margin="0,0,0,6"
                                       Opacity="1"
                                       Text="{Binding}"/>
                        </DataTemplate>

                        <Style BasedOn="{StaticResource WPFToolTipStyle}" TargetType="ToolTip">
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" />
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" />
                        </Style>

                        <Style x:Key="DatePickerStyle"
                               BasedOn="{StaticResource SyncfusionDateTimeEditStyle}"
                               TargetType="{x:Type syncfusion:DateTimeEdit}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="#FF9E9E9E"/>
                            <Setter Property="SelectionBrush" Value="#FF0179FF"/>
                            <Setter Property="FocusedBorderBrush" Value="#FF0179FF"/>
                            <Setter Property="Foreground" Value="#DD000000"/>
                            <Setter Property="RepeatButtonBackground" Value="Transparent"/>
                            <Setter Property="RepeatButtonBorderBrush" Value="#FF9E9E9E"/>
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"/>
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="CalendarStyle">
                                <Setter.Value>
                                    <Style TargetType="{x:Type syncfusionControls:Calendar}">
                                        <Setter Property="Foreground" Value="#DD000000"/>
                                        <Setter Property="Background" Value="White"/>
                                        <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"/>
                                        <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"/>
                                        <Setter Property="FontWeight" Value="Normal"/>
                                        <Setter Property="CalendarItemStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type syncfusionPrimitives:CalendarItem}">
                                                    <Setter Property="Margin" Value="0,3"/>
                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type syncfusionPrimitives:CalendarItem}">
                                                                <ControlTemplate.Resources>
                                                                    <DataTemplate x:Key="DayTitleTemplate">
                                                                        <TextBlock Foreground="#DD000000" FontWeight="Bold" FontSize="{Binding ContentTextFontSize, Source={StaticResource StyleProperties}}" FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" HorizontalAlignment="Center" Margin="0,6" Text="{Binding}" VerticalAlignment="Center"/>
                                                                    </DataTemplate>
                                                                </ControlTemplate.Resources>
                                                                <Grid x:Name="PART_Root">
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1">
                                                                        <Border BorderThickness="2" CornerRadius="1">
                                                                            <Grid>
                                                                                <Grid.Resources>
                                                                                    <Style x:Key="MaterialNextArrowButtonStyle" TargetType="{x:Type Button}">
                                                                                        <Setter Property="Content">
                                                                                            <Setter.Value>
                                                                                                <Path x:Name="path" Data="M0,0L4,3.5 0,7z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" HorizontalAlignment="Center" Height="8" Margin="0" Stretch="Fill" StrokeThickness="1" VerticalAlignment="Center" Width="5"/>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Style.BasedOn>
                                                                                            <Style TargetType="{x:Type Button}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                                <Setter Property="Foreground" Value="#89000000"/>
                                                                                                <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"/>
                                                                                                <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"/>
                                                                                                <Setter Property="FontWeight" Value="Medium"/>
                                                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                                                    <ContentPresenter.Resources>
                                                                                                                        <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                                                    </ContentPresenter.Resources>
                                                                                                                </ContentPresenter>
                                                                                                            </Border>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                                                                                    <Setter Property="MinHeight" Value="32"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsDefaulted" Value="True">
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsFocused" Value="True">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="Foreground" Value="#89000000"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="Foreground" Value="#89000000"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                    <Setter Property="Foreground" Value="#89000000"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                                                                                                    <Setter Property="Foreground" Value="#42000000"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Style.BasedOn>
                                                                                    </Style>
                                                                                    <Style x:Key="MaterialPreviousArrowButtonStyle" TargetType="{x:Type Button}">
                                                                                        <Setter Property="Content">
                                                                                            <Setter.Value>
                                                                                                <Path x:Name="path" Data="M4,0L4,7 0,3.5000001z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" HorizontalAlignment="Center" Height="8" Margin="0" Stretch="Fill" StrokeThickness="1" VerticalAlignment="Center" Width="5"/>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Style.BasedOn>
                                                                                            <Style TargetType="{x:Type Button}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                                <Setter Property="Foreground" Value="#89000000"/>
                                                                                                <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"/>
                                                                                                <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"/>
                                                                                                <Setter Property="FontWeight" Value="Medium"/>
                                                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                                                    <ContentPresenter.Resources>
                                                                                                                        <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                                                    </ContentPresenter.Resources>
                                                                                                                </ContentPresenter>
                                                                                                            </Border>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                                                                                    <Setter Property="MinHeight" Value="32"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsDefaulted" Value="True">
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsFocused" Value="True">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="Foreground" Value="#89000000"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                    <Setter Property="Foreground" Value="#89000000"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                    <Setter Property="Foreground" Value="#89000000"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                                                                                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                                                                                                    <Setter Property="Foreground" Value="#42000000"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Style.BasedOn>
                                                                                    </Style>
                                                                                    <Style x:Key="MaterialHeaderButtonStyle" TargetType="{x:Type Button}">
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                                                    <Grid Cursor="Hand">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver"/>
                                                                                                                <VisualState x:Name="Disabled"/>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <ContentPresenter x:Name="buttonContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" TextElement.Foreground="#DD000000" TextElement.FontWeight="Bold" TextElement.FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" TextElement.FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                                            <ContentPresenter.Resources>
                                                                                                                <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                                            </ContentPresenter.Resources>
                                                                                                        </ContentPresenter>
                                                                                                    </Grid>
                                                                                                    <ControlTemplate.Triggers>
                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                            <Setter Property="TextElement.Foreground" TargetName="buttonContent" Value="#DD000000"/>
                                                                                                        </Trigger>
                                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                                            <Setter Property="TextElement.Foreground" TargetName="buttonContent" Value="#60000000"/>
                                                                                                        </Trigger>
                                                                                                    </ControlTemplate.Triggers>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Grid.Resources>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="28"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="28"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="*"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="25" Grid.Row="0" Width="28" Style="{StaticResource MaterialPreviousArrowButtonStyle}" />
                                                                                <Button x:Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Center" Height="25" Grid.Row="0" VerticalAlignment="Center" Style="{StaticResource MaterialHeaderButtonStyle}" />
                                                                                <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="25" Grid.Row="0" Width="28" Style="{StaticResource MaterialNextArrowButtonStyle}" />
                                                                                <Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6" Grid.Row="1" Visibility="Visible">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                    </Grid.RowDefinitions>
                                                                                </Grid>
                                                                                <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,16" Grid.Row="1" Visibility="Hidden">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                    </Grid.RowDefinitions>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </Border>
                                                                    </Border>
                                                                    <Rectangle x:Name="PART_DisabledVisual" Fill="White" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill" Stroke="White" StrokeThickness="1" Visibility="Collapsed"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                                                                    </Trigger>
                                                                    <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type syncfusionControls:Calendar}}}" Value="Year">
                                                                        <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                                                        <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type syncfusionControls:Calendar}}}" Value="Decade">
                                                                        <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                                                        <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="CalendarDayButtonStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type syncfusionPrimitives:CalendarDayButton}">
                                                    <Setter Property="MinWidth" Value="5"/>
                                                    <Setter Property="MinHeight" Value="5"/>
                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type syncfusionPrimitives:CalendarDayButton}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver"/>
                                                                            <VisualState x:Name="Pressed"/>
                                                                            <VisualState x:Name="Disabled"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="SelectionStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="Unselected"/>
                                                                            <VisualState x:Name="Selected"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="CalendarButtonFocused"/>
                                                                            <VisualState x:Name="CalendarButtonUnfocused"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="ActiveStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="Active"/>
                                                                            <VisualState x:Name="Inactive"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="DayStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="RegularDay"/>
                                                                            <VisualState x:Name="Today"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="BlackoutDayStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="NormalDay"/>
                                                                            <VisualState x:Name="BlackoutDay"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <Border x:Name="TodayBackground" BorderBrush="#FF0179FF" BorderThickness="1" Background="White" CornerRadius="14" Height="24" Opacity="0" Width="24"/>
                                                                    <Border x:Name="SelectedBackground" Background="#FF0179FF" CornerRadius="14" Height="24" Opacity="0" Width="24"/>
                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                                    <Border x:Name="HighlightBackground" BorderBrush="#FFF2F2F2" BorderThickness="1" Background="#FFF2F2F2" CornerRadius="14" Height="24" Opacity="0" Width="24"/>
                                                                    <ContentPresenter x:Name="NormalText" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="#DD000000" TextElement.FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" TextElement.FontSize="{Binding ContentTextFontSize, Source={StaticResource StyleProperties}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                        <ContentPresenter.Resources>
                                                                            <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                        </ContentPresenter.Resources>
                                                                    </ContentPresenter>
                                                                    <Path x:Name="Blackout" Data="M0,0L16,0 16,2 0,2z" Fill="White" HorizontalAlignment="Stretch" Height="1" Margin="4" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch"/>
                                                                    <Border x:Name="DayButtonFocusVisual" BorderBrush="#FF0179FF" BorderThickness="1" CornerRadius="14" Height="24" IsHitTestVisible="False" Visibility="Collapsed" Width="24"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsSelected" Value="True">
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="White"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsToday" Value="True">
                                                                        <Setter Property="Opacity" TargetName="TodayBackground" Value="1"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#FF0179FF"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsInactive" Value="True">
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="Transparent"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsBlackedOut" Value="True">
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Stroke" TargetName="Blackout" Value="#42000000"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsFocused" Value="True">
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="White"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#DD000000"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#60000000"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsSelected" Value="True"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="TodayBackground" Value="0"/>
                                                                        <Setter Property="Width" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Height" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FF0179FF"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="White"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsFocused" Value="True"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="TodayBackground" Value="0"/>
                                                                        <Setter Property="Width" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Height" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FF0179FF"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="White"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="0"/>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="#260179FF"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#FF0179FF"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsEnabled" Value="False"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#60000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsFocused" Value="True"/>
                                                                            <Condition Property="IsInactive" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsInactive" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsEnabled" Value="False"/>
                                                                            <Condition Property="IsInactive" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#60000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsSelected" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FFEEEEEE"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#42000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsFocused" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FFEEEEEE"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#42000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#DD000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#42000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsEnabled" Value="False"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#60000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#42000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsSelected" Value="True"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="TodayBackground" Value="0"/>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Width" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Height" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FFE5E5E5"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#42000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsFocused" Value="True"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="TodayBackground" Value="0"/>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Width" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Height" TargetName="SelectedBackground" Value="18"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FFE5E5E5"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#A5000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="#FF0179FF"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#A5000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsEnabled" Value="False"/>
                                                                            <Condition Property="IsToday" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#60000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#60000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsFocused" Value="True"/>
                                                                            <Condition Property="IsInactive" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Background" TargetName="SelectedBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="BorderBrush" TargetName="DayButtonFocusVisual" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#A5000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsInactive" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#A5000000"/>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsEnabled" Value="False"/>
                                                                            <Condition Property="IsInactive" Value="True"/>
                                                                            <Condition Property="IsBlackedOut" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                                                                        <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                                                        <Setter Property="Background" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="White"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#A5000000"/>
                                                                        <Setter Property="Fill" TargetName="Blackout" Value="#A5000000"/>
                                                                    </MultiTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="CalendarButtonStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type syncfusionPrimitives:CalendarButton}">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="White"/>
                                                    <Setter Property="Foreground" Value="#DD000000"/>
                                                    <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"/>
                                                    <Setter Property="FontSize" Value="{Binding ContentTextFontSize, Source={StaticResource StyleProperties}}"/>
                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="MinWidth" Value="45"/>
                                                    <Setter Property="MinHeight" Value="47"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type syncfusionPrimitives:CalendarButton}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver"/>
                                                                            <VisualState x:Name="Pressed"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="SelectionStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="Unselected"/>
                                                                            <VisualState x:Name="Selected"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="ActiveStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="Active"/>
                                                                            <VisualState x:Name="Inactive"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="CalendarButtonFocused"/>
                                                                            <VisualState x:Name="CalendarButtonUnfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <Rectangle x:Name="SelectedBackground" Fill="#FF0179FF" Opacity="0" RadiusY="1" RadiusX="1"/>
                                                                    <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}"/>
                                                                    <ContentPresenter x:Name="NormalText" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,1,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                        <ContentPresenter.Resources>
                                                                            <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                        </ContentPresenter.Resources>
                                                                    </ContentPresenter>
                                                                    <Rectangle x:Name="CalendarButtonFocusVisual" IsHitTestVisible="False" RadiusY="1" RadiusX="1" Stroke="#FF0179FF" Visibility="Collapsed"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="Background" Value="1"/>
                                                                        <Setter Property="Fill" TargetName="Background" Value="#FFF2F2F2"/>
                                                                        <Setter Property="Stroke" TargetName="Background" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#DD000000"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsFocused" Value="True">
                                                                        <Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible"/>
                                                                        <Setter Property="Opacity" TargetName="SelectedBackground" Value="1"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="White"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" TargetName="Background" Value="1"/>
                                                                        <Setter Property="Fill" TargetName="Background" Value="#FFF2F2F2"/>
                                                                        <Setter Property="Stroke" TargetName="Background" Value="#FFF2F2F2"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#DD000000"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsInactive" Value="True">
                                                                        <Setter Property="Opacity" TargetName="Background" Value="1"/>
                                                                        <Setter Property="Fill" TargetName="Background" Value="Transparent"/>
                                                                        <Setter Property="Stroke" TargetName="Background" Value="Transparent"/>
                                                                        <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="#60000000"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type syncfusionControls:Calendar}">
                                                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                                        <syncfusionPrimitives:CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}"/>
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="AllowDrop" Value="True"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type syncfusion:DateTimeEdit}">
                                        <Grid>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Opacity="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                <Grid x:Name="ContentHost">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="0"/>
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <ContentControl x:Name="PART_EmptyContent" Background="{StaticResource ContentBackground}" ContentTemplate="{StaticResource WatermarkContentTemplate}" Content="{TemplateBinding NoneDateText}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontWeight="{StaticResource MaterialLight.FontWeightNormal}" FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" Foreground="{StaticResource PlaceholderForeground}" FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" IsHitTestVisible="False" Margin="2,0,0,0" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{TemplateBinding WatermarkVisibility}"/>
                                                        <ToggleButton x:Name="PART_DropDown" Grid.Column="2" HorizontalAlignment="Stretch" IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" VerticalAlignment="Stretch" Width="20">
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="Foreground" Value="#89000000"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                        <ContentPresenter.Resources>
                                                                                            <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                        </ContentPresenter.Resources>
                                                                                    </ContentPresenter>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                                                        <Setter Property="MinHeight" Value="32"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsFocused" Value="True">
                                                                                        <Setter Property="Foreground" Value="#89000000"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                        <Setter Property="Foreground" Value="#89000000"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Foreground" Value="#89000000"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsChecked" Value="True">
                                                                                        <Setter Property="Foreground" Value="#89000000"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Foreground" Value="#42000000"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                            <ToggleButton.Visibility>
                                                                <Binding Path="IsButtonPopUpEnabled" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <BooleanToVisibilityConverter/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ToggleButton.Visibility>
                                                            <Path x:Name="path1" Data="M11.500002,10L11.999999,10 12.5,10 12.5,11.463126 12.708088,12.072044 13.550999,13.093001 13.165756,13.41129 13.165999,13.412001 13.165551,13.411458 12.78,13.730001 11.500002,12.179z M11.999999,9.0000005C10.345999,9.0000005 8.9999995,10.346001 8.9999995,12.000001 8.9999995,13.654002 10.345999,15.000001 11.999999,15.000001 13.654,15.000001 14.999999,13.654002 14.999999,12.000001 14.999999,10.346001 13.654,9.0000005 11.999999,9.0000005z M11.999999,6.0000004L1.9999996,6.0000004 1.9999996,13.000001 8.1265182,13.000001 8.1261243,12.998617C8.0437984,12.679318 7.9999995,12.344689 7.9999995,12.000001 7.9999995,9.7940006 9.7939991,8 11.999999,8L12.000885,8.0000114z M3.4859979,0C4.0379977,0,4.4859979,0.44700003,4.4859979,1L4.4859979,2 9.9999995,2 9.9999995,1C9.9999995,0.44700003 10.447999,0 10.999999,0 11.552,0 11.999999,0.44700003 11.999999,1L11.999999,2.0000002 12.102954,2.0026041C13.160059,2.0562031,13.999997,2.9305001,13.999997,4.0000004L13.999997,8.5379477 14.072751,8.579824C15.227388,9.2820592 15.999999,10.552313 15.999999,12.000001 15.999999,14.206002 14.206,16.000002 11.999999,16.000002 11.034874,16.000002 10.148609,15.65662 9.4569315,15.085582L9.3581623,15.000002 1.9999996,15.000002C0.89599976,15.000002,0,14.104002,0,13.000001L0,4.0000004C0,2.8960001,0.89599976,2,1.9999996,2L2.4859977,2 2.4859977,1C2.4859977,0.44700003,2.9339978,0,3.4859979,0z" Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" Height="12" Margin="1,0,0,0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="12"/>
                                                        </ToggleButton>
                                                        <Grid Grid.Column="3">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="5*"/>
                                                                <RowDefinition Height="5*"/>
                                                            </Grid.RowDefinitions>
                                                            <RepeatButton x:Name="PART_UpArrow" BorderBrush="{TemplateBinding RepeatButtonBorderBrush}" Background="{TemplateBinding RepeatButtonBackground}" Grid.Column="1" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabledRepeatButton}" Padding="{TemplateBinding Padding}" Grid.Row="0" Width="16">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="Foreground" Value="#89000000"/>
                                                                        <Setter Property="FontFamily" Value="pack://application:,,,/WPFThemeStudio;Component/Input/Material_Design/Common/Fonts/#Roboto"/>
                                                                        <Setter Property="FontSize" Value="12"/>
                                                                        <Setter Property="FontWeight" Value="Medium"/>
                                                                        <Setter Property="BorderThickness" Value="0"/>
                                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                            <Setter Property="Foreground" Value="#89000000"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#FFCCCCCC"/>
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCCCC"/>
                                                                                            <Setter Property="Foreground" Value="#89000000"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                                                                            <Setter Property="Foreground" Value="#42000000"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <RepeatButton.Visibility>
                                                                    <Binding Path="IsVisibleRepeatButton" RelativeSource="{RelativeSource TemplatedParent}">
                                                                        <Binding.Converter>
                                                                            <BooleanToVisibilityConverter/>
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </RepeatButton.Visibility>
                                                                <Path x:Name="upbuttonpath" Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" HorizontalAlignment="Stretch" Height="4" Stretch="Uniform" VerticalAlignment="Stretch" Width="8"/>
                                                            </RepeatButton>
                                                            <RepeatButton x:Name="PART_DownArrow" BorderBrush="{TemplateBinding RepeatButtonBorderBrush}" Background="{TemplateBinding RepeatButtonBackground}" Grid.Column="1" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabledRepeatButton}" Padding="{TemplateBinding Padding}" Grid.Row="1" Width="16">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="Foreground" Value="#89000000"/>
                                                                        <Setter Property="FontFamily" Value="pack://application:,,,/WPFThemeStudio;Component/Input/Material_Design/Common/Fonts/#Roboto"/>
                                                                        <Setter Property="FontSize" Value="12"/>
                                                                        <Setter Property="FontWeight" Value="Medium"/>
                                                                        <Setter Property="BorderThickness" Value="0"/>
                                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                            <Setter Property="Foreground" Value="#89000000"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#FFCCCCCC"/>
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCCCC"/>
                                                                                            <Setter Property="Foreground" Value="#89000000"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                                                                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                                                                            <Setter Property="Foreground" Value="#42000000"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <RepeatButton.Visibility>
                                                                    <Binding Path="IsVisibleRepeatButton" RelativeSource="{RelativeSource TemplatedParent}">
                                                                        <Binding.Converter>
                                                                            <BooleanToVisibilityConverter/>
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </RepeatButton.Visibility>
                                                                <Path x:Name="downbuttonpath" Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" HorizontalAlignment="Stretch" Height="4" Stretch="Uniform" VerticalAlignment="Stretch" Width="8"/>
                                                            </RepeatButton>
                                                        </Grid>
                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="False" Placement="Bottom" Grid.Row="1" StaysOpen="False">
                                                            <Border x:Name="CombinedBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="White" Margin="8,0,8,8" SnapsToDevicePixels="True">
                                                                <Border.Effect>
                                                                    <DropShadowEffect BlurRadius="14" Color="#AA000000" Direction="270" Opacity="0.42" RenderingBias="Performance" ShadowDepth="4.5"/>
                                                                </Border.Effect>
                                                                <Grid x:Name="PART_PopupGrid_Classic" Background="White">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="Auto"/>
                                                                    </Grid.RowDefinitions>
                                                                    <ContentControl x:Name="CombinedCalendar" Content="{Binding DateTimeCalender, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Margin="4" Visibility="Visible" VerticalAlignment="Center"/>
                                                                    <Border x:Name="Separator" Background="#FFE0E0E0" Grid.Column="1" Margin="0,32" SnapsToDevicePixels="True" Width="1"/>
                                                                    <ContentControl x:Name="CombinedClock" Content="{Binding Clock, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" Visibility="Visible"/>
                                                                    <Border x:Name="Footer" BorderBrush="#FFE0E0E0" BorderThickness="0,1,0,0" Background="White" Grid.ColumnSpan="4" Grid.Row="1" SnapsToDevicePixels="True">
                                                                        <Grid x:Name="FooterHost">
                                                                            <Grid x:Name="CalendarFooter" HorizontalAlignment="Left">
                                                                                <Button x:Name="todayButton" BorderBrush="Transparent" BorderThickness="1" Content="Today" Margin="4" Padding="8,4" SnapsToDevicePixels="True">
                                                                                    <Button.Style>
                                                                                        <Style TargetType="{x:Type Button}">
                                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="BorderThickness" Value="0"/>
                                                                                            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
                                                                                            <Setter Property="Foreground" Value="#DD000000"/>
                                                                                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"/>
                                                                                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"/>
                                                                                            <Setter Property="FontWeight" Value="Medium"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{Binding TodayLabel, Source={StaticResource DateTimeResourceWrapperKey}}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                                                <ContentPresenter.Resources>
                                                                                                                    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                                                </ContentPresenter.Resources>
                                                                                                            </ContentPresenter>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                                                                                <Setter Property="MinHeight" Value="32"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsDefaulted" Value="True">
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsFocused" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#42000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Button.Style>
                                                                                </Button>
                                                                            </Grid>
                                                                            <Grid x:Name="ClockFooter" HorizontalAlignment="Stretch">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Button x:Name="noneButton" BorderBrush="Transparent" BorderThickness="1" Content="Clear" Margin="4" Padding="8,4">
                                                                                    <Button.Style>
                                                                                        <Style TargetType="{x:Type Button}">
                                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="BorderThickness" Value="0"/>
                                                                                            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
                                                                                            <Setter Property="Foreground" Value="#DD000000"/>
                                                                                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"/>
                                                                                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"/>
                                                                                            <Setter Property="FontWeight" Value="Medium"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{Binding AccessEmptyDateText, Source={StaticResource DateTimeResourceWrapperKey}}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                                                <ContentPresenter.Resources>
                                                                                                                    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                                                </ContentPresenter.Resources>
                                                                                                            </ContentPresenter>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                                                                                <Setter Property="MinHeight" Value="32"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsDefaulted" Value="True">
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsFocused" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#42000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Button.Style>
                                                                                    <Button.Visibility>
                                                                                        <Binding Path="IsEmptyDateEnabled" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                            <Binding.Converter>
                                                                                                <BooleanToVisibilityConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Button.Visibility>
                                                                                </Button>
                                                                                <Border x:Name="ButtonSeparator" Background="#FFE0E0E0" Grid.Column="1" Margin="4" SnapsToDevicePixels="True" Width="1"/>
                                                                                <Button x:Name="okButton" BorderBrush="Transparent" BorderThickness="1" Content="{Binding OkLabel}" Grid.Column="2" Margin="4" Padding="8,4">
                                                                                    <Button.Style>
                                                                                        <Style TargetType="{x:Type Button}">
                                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                            <Setter Property="BorderThickness" Value="0"/>
                                                                                            <Setter Property="Foreground" Value="#FF0179FF"/>
                                                                                            <Setter Property="FontFamily" Value="pack://application:,,,/WPFThemeStudio;Component/Input/Material_Design/Common/Fonts/#Roboto"/>
                                                                                            <Setter Property="FontSize" Value="12"/>
                                                                                            <Setter Property="FontWeight" Value="Medium"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                                                <ContentPresenter.Resources>
                                                                                                                    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                                                </ContentPresenter.Resources>
                                                                                                            </ContentPresenter>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                                                                                <Setter Property="MinHeight" Value="32"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsFocused" Value="True">
                                                                                                                <Setter Property="Background" TargetName="Chrome" Value="#260179FF"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="Chrome" Value="#260179FF"/>
                                                                                                                <Setter Property="Foreground" Value="#FF0179FF"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="BorderBrush" TargetName="Chrome" Value="#260179FF"/>
                                                                                                                <Setter Property="Background" TargetName="Chrome" Value="#260179FF"/>
                                                                                                                <Setter Property="Foreground" Value="#FF0179FF"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="Chrome" Value="#330179FF"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="Chrome" Value="#330179FF"/>
                                                                                                                <Setter Property="Foreground" Value="#FF0179FF"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Background" TargetName="Chrome" Value="Transparent"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="Chrome" Value="Transparent"/>
                                                                                                                <Setter Property="Foreground" Value="#60000000"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Button.Style>
                                                                                </Button>
                                                                                <Button x:Name="cancelButton" BorderBrush="Transparent" BorderThickness="1" Content="{Binding CancelLabel}" Grid.Column="3" Margin="4" Padding="8,4">
                                                                                    <Button.Style>
                                                                                        <Style TargetType="{x:Type Button}">
                                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="BorderThickness" Value="0"/>
                                                                                            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
                                                                                            <Setter Property="Foreground" Value="#DD000000"/>
                                                                                            <Setter Property="FontFamily" Value="pack://application:,,,/WPFThemeStudio;Component/Input/Material_Design/Common/Fonts/#Roboto"/>
                                                                                            <Setter Property="FontSize" Value="12"/>
                                                                                            <Setter Property="FontWeight" Value="Medium"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                                                <ContentPresenter.Resources>
                                                                                                                    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}"/>
                                                                                                                </ContentPresenter.Resources>
                                                                                                            </ContentPresenter>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                                                                                <Setter Property="MinHeight" Value="32"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsDefaulted" Value="True">
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsFocused" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCCCC"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#DD000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD8D8D8"/>
                                                                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#42000000"/>
                                                                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Button.Style>
                                                                                </Button>
                                                                            </Grid>
                                                                        </Grid>
                                                                    </Border>
                                                                </Grid>
                                                            </Border>
                                                        </Popup>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF757575"/>
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF0179FF"/>
                                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                                <Setter Property="Padding" Value="0,0,0,-1"/>
                                            </Trigger>
                                            <Trigger Property="IsOpen" SourceName="PART_Popup" Value="True">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF0179FF"/>
                                                <Setter Property="Border.BorderThickness" Value="0,0,0,2"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" SourceName="PART_UpArrow" Value="True">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF0179FF"/>
                                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" SourceName="PART_DownArrow" Value="True">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF0179FF"/>
                                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF0179FF"/>
                                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                                <Setter Property="Padding" Value="0,0,0,-1"/>
                                            </Trigger>
                                            <Trigger Property="DropDownView" Value="Calendar">
                                                <Setter Property="Visibility" TargetName="CombinedCalendar" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="CombinedClock" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="cancelButton" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="okButton" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="todayButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="CalendarFooter" Value="Visible"/>
                                                <Setter Property="HorizontalAlignment" TargetName="ClockFooter" Value="Right"/>
                                                <Setter Property="Data" TargetName="path1" Value="M8,9L11,9 11,12 8,12z M13,6L2,6 2,14 13.001,14z M3.4860003,0C4.0380001,0,4.4860005,0.44700003,4.4860005,1L4.4860005,2 11,2 11,1C11,0.44700003 11.448,0 12,0 12.552,0 13,0.44700003 13,1L13,2C14.104,2,15,2.8960001,15,4L15,14C15,15.104,14.104,16,13,16L2,16C0.89600003,16,0,15.104,0,14L0,4C0,2.8960001,0.89600003,2,2,2L2.4860001,2 2.4860001,1C2.4860003,0.44700003,2.9340003,0,3.4860003,0z"/>
                                            </Trigger>
                                            <Trigger Property="DropDownView" Value="Clock">
                                                <Setter Property="Visibility" TargetName="CombinedCalendar" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="CombinedClock" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="cancelButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="okButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="todayButton" Value="Collapsed"/>
                                                <Setter Property="Grid.Column" TargetName="okButton" Value="0"/>
                                                <Setter Property="Visibility" TargetName="CalendarFooter" Value="Collapsed"/>
                                                <Setter Property="HorizontalAlignment" TargetName="ClockFooter" Value="Stretch"/>
                                                <Setter Property="Data" TargetName="path1" Value="M7.5000014,4L8.5,4 8.5,8.2319994 11.277998,10.084 10.722999,10.915999 7.5000014,8.7679996z M7.993,2C4.6880035,2 2,4.691 2,8 2,11.309 4.6880035,14 7.993,14 11.305,14 14,11.309 14,8 14,4.691 11.305,2 7.993,2z M7.993,0C12.408005,0 16,3.5890007 16,8 16,12.410999 12.408005,16 7.993,16 3.5860023,16 0,12.410999 0,8 0,3.5890007 3.5860023,0 7.993,0z"/>
                                            </Trigger>
                                            <Trigger Property="DropDownView" Value="Combined">
                                                <Setter Property="Visibility" TargetName="CombinedCalendar" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="CombinedClock" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="Separator" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="todayButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="cancelButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="okButton" Value="Visible"/>
                                                <Setter Property="Grid.Column" TargetName="okButton" Value="2"/>
                                                <Setter Property="Visibility" TargetName="CalendarFooter" Value="Visible"/>
                                                <Setter Property="HorizontalAlignment" TargetName="ClockFooter" Value="Right"/>
                                                <Setter Property="HorizontalAlignment" TargetName="CalendarFooter" Value="Left"/>
                                                <Setter Property="Data" TargetName="path1" Value="M11.500002,10L11.999999,10 12.5,10 12.5,11.463126 12.708088,12.072044 13.550999,13.093001 13.165756,13.41129 13.165999,13.412001 13.165551,13.411458 12.78,13.730001 11.500002,12.179z M11.999999,9.0000005C10.345999,9.0000005 8.9999995,10.346001 8.9999995,12.000001 8.9999995,13.654002 10.345999,15.000001 11.999999,15.000001 13.654,15.000001 14.999999,13.654002 14.999999,12.000001 14.999999,10.346001 13.654,9.0000005 11.999999,9.0000005z M11.999999,6.0000004L1.9999996,6.0000004 1.9999996,13.000001 8.1265182,13.000001 8.1261243,12.998617C8.0437984,12.679318 7.9999995,12.344689 7.9999995,12.000001 7.9999995,9.7940006 9.7939991,8 11.999999,8L12.000885,8.0000114z M3.4859979,0C4.0379977,0,4.4859979,0.44700003,4.4859979,1L4.4859979,2 9.9999995,2 9.9999995,1C9.9999995,0.44700003 10.447999,0 10.999999,0 11.552,0 11.999999,0.44700003 11.999999,1L11.999999,2.0000002 12.102954,2.0026041C13.160059,2.0562031,13.999997,2.9305001,13.999997,4.0000004L13.999997,8.5379477 14.072751,8.579824C15.227388,9.2820592 15.999999,10.552313 15.999999,12.000001 15.999999,14.206002 14.206,16.000002 11.999999,16.000002 11.034874,16.000002 10.148609,15.65662 9.4569315,15.085582L9.3581623,15.000002 1.9999996,15.000002C0.89599976,15.000002,0,14.104002,0,13.000001L0,4.0000004C0,2.8960001,0.89599976,2,1.9999996,2L2.4859977,2 2.4859977,1C2.4859977,0.44700003,2.9339978,0,3.4859979,0z"/>
                                            </Trigger>
                                            <Trigger Property="DropDownView" Value="Classic">
                                                <Setter Property="Visibility" TargetName="CombinedCalendar" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="CombinedClock" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="cancelButton" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="okButton" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="todayButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="CalendarFooter" Value="Visible"/>
                                                <Setter Property="HorizontalAlignment" TargetName="ClockFooter" Value="Right"/>
                                                <Setter Property="Data" TargetName="path1" Value="M8,9L11,9 11,12 8,12z M13,6L2,6 2,14 13.001,14z M3.4860003,0C4.0380001,0,4.4860005,0.44700003,4.4860005,1L4.4860005,2 11,2 11,1C11,0.44700003 11.448,0 12,0 12.552,0 13,0.44700003 13,1L13,2C14.104,2,15,2.8960001,15,4L15,14C15,15.104,14.104,16,13,16L2,16C0.89600003,16,0,15.104,0,14L0,4C0,2.8960001,0.89600003,2,2,2L2.4860001,2 2.4860001,1C2.4860003,0.44700003,2.9340003,0,3.4860003,0z"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="DropDownView" Value="Clock"/>
                                                    <Condition Property="IsEmptyDateEnabled" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility" TargetName="noneButton" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="ButtonSeparator" Value="Collapsed"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="DropDownView" Value="Calendar"/>
                                                    <Condition Property="IsEmptyDateEnabled" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility" TargetName="noneButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="ButtonSeparator" Value="Collapsed"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="DropDownView" Value="Classic"/>
                                                    <Condition Property="IsEmptyDateEnabled" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility" TargetName="noneButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="ButtonSeparator" Value="Collapsed"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="DropDownView" Value="Calendar"/>
                                                    <Condition Property="IsEmptyDateEnabled" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility" TargetName="ButtonSeparator" Value="Collapsed"/>
                                                <Setter Property="HorizontalAlignment" TargetName="CalendarFooter" Value="Stretch"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="DropDownView" Value="Classic"/>
                                                    <Condition Property="IsEmptyDateEnabled" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility" TargetName="ButtonSeparator" Value="Collapsed"/>
                                                <Setter Property="HorizontalAlignment" TargetName="CalendarFooter" Value="Stretch"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="DropDownView" Value="Combined"/>
                                                    <Condition Property="IsEmptyDateEnabled" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility" TargetName="noneButton" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="ButtonSeparator" Value="Visible"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="DropDownView" Value="Combined"/>
                                                    <Condition Property="IsEmptyDateEnabled" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility" TargetName="noneButton" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="ButtonSeparator" Value="Collapsed"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsReadOnly" Value="True">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFE0E0E0"/>
                                                <Setter Property="Background" TargetName="Border" Value="White"/>
                                                <Setter Property="Foreground" TargetName="PART_ContentHost" Value="#60000000"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFE0E0E0"/>
                                                <Setter Property="Background" TargetName="Border" Value="White"/>
                                                <Setter Property="Foreground" Value="#60000000"/>
                                            </Trigger>
                                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                                <Setter Property="MinHeight" Value="32"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Background="Transparent">
                    <syncfusion:SfTextBoxExt x:Name="textBoxSymbol"
                                             AutoCompleteMode="Suggest"
                                             FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                             FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                             HighlightedTextColor="#FF0179FF"
                                             LostFocus="TextBoxSymbol_LostFocusAsync"
                                             MaxDropDownHeight="{Binding MaxDropDownHeight, Source={StaticResource StyleProperties}}"
                                             MaxLength="{Binding MaxInputLength, Source={StaticResource StyleProperties}}"
                                             SearchItemPath="Name"
                                             SelectedItemChanged="TextBoxSymbol_SelectedItemChanged"
                                             ShowSuggestionsOnFocus="True"
                                             SuggestionMode="Contains"
                                             TextChanged="TextBoxSymbol_TextChanged"
                                             TextHighlightMode="MultipleOccurrence"
                                             ToolTip="{x:Static property:Resources.TextBoxSymbol_ToolTip}"
                                             VerticalAlignment="Center"
                                             Watermark="{x:Static property:Resources.TextBoxSymbol_WaterMark}"
                                             WatermarkTemplate="{StaticResource TextboxWatermarkTemplate}">
                        <syncfusion:SfTextBoxExt.AutoCompleteItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                               FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                               Margin="4,2,4,0"
                                               Text="{Binding Symbol}" />
                                    <TextBlock FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                               FontSize="{Binding ContentTextFontSize, Source={StaticResource StyleProperties}}"
                                               Foreground="Gray"
                                               Margin="4,1,4,2"
                                               Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </syncfusion:SfTextBoxExt.AutoCompleteItemTemplate>
                    </syncfusion:SfTextBoxExt>
                </Border>

                <Border Grid.Column="1" Background="Transparent">
                    <syncfusion:DateTimeEdit x:Name="datePickerStartDate"
                                             CustomPattern="{Binding DateFormat, Source={StaticResource StyleProperties}}"
                                             DateTimeChanged="DatePickerStartDate_DateTimeChanged"
                                             FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                             FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                             IsEmptyDateEnabled="True"
                                             Margin="15,0,0,0"
                                             NoneDateText="{x:Static property:Resources.DatePickerStartDate_WaterMark}"
                                             NullValue="{x:Null}"
                                             Pattern="CustomPattern"
                                             ShowMaskOnNullValue="False"
                                             Style="{DynamicResource DatePickerStyle}"
                                             ToolTip="{x:Static property:Resources.DatePickerStartDate_ToolTip}"
                                             VerticalAlignment="Center" />
                </Border>

                <Border Grid.Column="2" Background="Transparent">
                    <syncfusion:DateTimeEdit x:Name="datePickerEndDate"
                                             CustomPattern="{Binding DateFormat, Source={StaticResource StyleProperties}}"
                                             DateTimeChanged="DatePickerEndDate_DateTimeChanged"
                                             FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                             FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                             IsEmptyDateEnabled="True"
                                             Margin="15,0,0,0"
                                             NoneDateText="{x:Static property:Resources.DatePickerEndDate_WaterMark}"
                                             NullValue="{x:Null}"
                                             Pattern="CustomPattern"
                                             ShowMaskOnNullValue="False"
                                             Style="{DynamicResource DatePickerStyle}"
                                             ToolTip="{x:Static property:Resources.DatePickerEndDate_ToolTip}"
                                             VerticalAlignment="Center"/>
                </Border>

                <Border Grid.Column="3" Background="Transparent">
                    <syncfusion:ButtonAdv x:Name="buttonSearch"
                                          Click="ButtonSearch_ClickAsync"
                                          HorizontalAlignment="Right"
                                          IconHeight="18"
                                          IconWidth="18"
                                          IsEnabled="False"
                                          Label=""
                                          Padding="15,5,15,5"
                                          SizeMode="Small"
                                          SmallIcon="../Images/Search.png"
                                          ToolTip="{x:Static property:Resources.ButtonSearch_ToolTip}"
                                          VerticalAlignment="Center"/>
                </Border>
            </Grid>
        </Border>

        <syncfusionNotification:SfBusyIndicator x:Name="busyIndicatorSearchResultArea"
                                                Grid.Row="1"
                                                AnimationType="DoubleRing"
                                                Background="Transparent"
                                                BorderBrush="LightGray"
                                                BorderThickness="0.5"
                                                IsBusy="False"
                                                Margin="15,0,15,0">
            <syncfusionNotification:SfBusyIndicator.HeaderTemplate>
                <DataTemplate >
                    <TextBlock FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                               FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                               Foreground="DarkGray"
                               Margin="6,10,0,0"
                               Text="{x:Static property:Resources.BusyIndicatorSearchResultArea_Header}"
                               TextAlignment="Center"/>
                </DataTemplate>
            </syncfusionNotification:SfBusyIndicator.HeaderTemplate>

            <Grid>
                <Grid.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/SfDataGrid/SfDataGrid.xaml" />
                        </ResourceDictionary.MergedDictionaries>

                        <Style BasedOn="{StaticResource SyncfusionAdvancedFilterControlStyle}" TargetType="syncfusion:AdvancedFilterControl">
                            <Setter Property="CanGenerateUniqueItems" Value="False" />
                        </Style>

                        <Style BasedOn="{StaticResource SyncfusionGridStackedHeaderCellControlStyle}" TargetType="syncfusion:GridStackedHeaderCellControl">
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" />
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" />
                        </Style>

                        <Style BasedOn="{StaticResource WPFToolTipStyle}" TargetType="ToolTip">
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" />
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" />
                        </Style>

                        <Style x:Key="GridCellStyle"
                               BasedOn="{StaticResource SyncfusionGridCellStyle}"
                               TargetType="syncfusion:GridCell">
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" />
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" />
                        </Style>

                        <Style x:Key="GridFilterPopupStyle"
                               BasedOn="{StaticResource SyncfusionGridFilterControlStyle}"
                               TargetType="syncfusion:GridFilterControl">
                            <Setter Property="FilterMode" Value="AdvancedFilter" />
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" />
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" />
                        </Style>

                        <Style x:Key="GridHeaderStyle"
                               BasedOn="{StaticResource SyncfusionGridHeaderCellControlStyle}"
                               TargetType="syncfusion:GridHeaderCellControl">
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" />
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" />
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>

                <syncfusion:SfDataGrid x:Name="dataGridStrikePriceVolumeTable"
                                       AllowFiltering="True"
                                       AllowResizingColumns="True"
                                       AllowSorting="False"
                                       AllowTriStateSorting="True"
                                       AutoGenerateColumns="False"
                                       CellStyle="{StaticResource GridCellStyle}"
                                       ColumnSizer="Auto"
                                       EnableDataVirtualization="True"
                                       FilterPopupStyle="{StaticResource GridFilterPopupStyle}"
                                       FrozenColumnCount="2"
                                       HeaderRowHeight="{Binding HeaderRowHeight, Source={StaticResource StyleProperties}}"
                                       HeaderStyle="{StaticResource GridHeaderStyle}"
                                       ResizingColumns="DataGridStrikePriceVolumeTable_OnResizingColumns"
                                       ScrollMode="Async"
                                       SelectionChanged="DataGridStrikePriceVolumeTable_SelectionChanged"
                                       SelectionMode="Extended"
                                       SelectionUnit="Row"
                                       ShowToolTip="True"
                                       Visibility="Hidden">
                    <syncfusion:SfDataGrid.Columns>
                        <syncfusion:GridCurrencyColumn x:Name="dataGridStrikePriceVolumeTable_columnStrikePrice"
                                                       AllowSorting="True"
                                                       CurrencyGroupSeparator=""
                                                       CurrencySymbol=""
                                                       MappingName="StrikePrice"
                                                       ShowHeaderToolTip="True"
                                                       TextAlignment="Right"/>
                        <syncfusion:GridNumericColumn x:Name="dataGridStrikePriceVolumeTable_columnTotalVolume"
                                                      AllowSorting="True"
                                                      MappingName="TotalVolume"
                                                      NumberDecimalDigits="1"
                                                      NumberGroupSeparator=""
                                                      ShowHeaderToolTip="True"
                                                      TextAlignment="Right"/>
                    </syncfusion:SfDataGrid.Columns>
                </syncfusion:SfDataGrid>

                <TextBlock x:Name="textBlockNullData"
                           FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                           FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                           Foreground="{Binding ColourDanger, Source={StaticResource StyleProperties}}"
                           HorizontalAlignment="Center"
                           Margin="15"
                           Text="{x:Static property:Resources.TextBlockNullData_Text_UnknownError}"
                           TextWrapping="Wrap"
                           VerticalAlignment="Center"
                           Visibility="Hidden"/>
            </Grid>
        </syncfusionNotification:SfBusyIndicator>

        <Border
            Grid.Row="2"
            Background="Transparent"
            Margin="15,0,15,0">
            <Grid>
                <Grid.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/ButtonAdv/ButtonAdv.xaml" />
                            <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/MSControl/Tooltip.xaml" />
                        </ResourceDictionary.MergedDictionaries>

                        <Style BasedOn="{StaticResource WPFToolTipStyle}" TargetType="ToolTip">
                            <Setter Property="FontFamily" Value="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}" />
                            <Setter Property="FontSize" Value="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}" />
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Background="Transparent">
                    <syncfusion:ButtonAdv x:Name="buttonClearSelection"
                                          Click="ButtonClearSelection_Click"
                                          FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                          FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                          HorizontalAlignment="Left"
                                          IconHeight="16"
                                          IconWidth="16"
                                          IsEnabled="False"
                                          Label="{x:Static property:Resources.ButtonClearSelection_Label}"
                                          Padding="5"
                                          SizeMode="Normal"
                                          SmallIcon="../Images/ClearSelection.png"
                                          VerticalAlignment="Center"/>
                </Border>

                <Border Grid.Column="1" Background="Transparent">
                    <syncfusion:ButtonAdv x:Name="buttonRestoreColumnWidth"
                                          Click="ButtonRestoreColumnWidth_Click"
                                          FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                          FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                          HorizontalAlignment="Center"
                                          IconHeight="16"
                                          IconWidth="16"
                                          IsEnabled="False"
                                          Label="{x:Static property:Resources.ButtonRestoreColumnWidth_Label}"
                                          Padding="5"
                                          SizeMode="Normal"
                                          SmallIcon="../Images/RestoreColumnWidth.png"
                                          VerticalAlignment="Center"/>
                </Border>

                <Border Grid.Column="2" Background="Transparent">
                    <syncfusion:ButtonAdv x:Name="buttonExportToExcel"
                                          Click="ButtonExportToExcel_Click"
                                          FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                          FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                          HorizontalAlignment="Center"
                                          IconHeight="16"
                                          IconWidth="16"
                                          IsEnabled="False"
                                          Label="{x:Static property:Resources.ButtonExportToExcel_Label}"
                                          Padding="5"
                                          SizeMode="Normal"
                                          SmallIcon="../Images/ExportToExcel.png"
                                          VerticalAlignment="Center"/>
                </Border>

                <Border Grid.Column="3" Background="Transparent">
                    <syncfusion:ButtonAdv x:Name="buttonPrint"
                                          Click="ButtonPrint_Click"
                                          FontFamily="{Binding GlobalFontFamily, Source={StaticResource StyleProperties}}"
                                          FontSize="{Binding PrimaryTextFontSize, Source={StaticResource StyleProperties}}"
                                          HorizontalAlignment="Right"
                                          IconHeight="16"
                                          IconWidth="16"
                                          IsEnabled="False"
                                          Label="{x:Static property:Resources.ButtonPrint_Label}"
                                          Padding="5"
                                          SizeMode="Normal"
                                          SmallIcon="../Images/Print.png"
                                          ToolTip="{x:Static property:Resources.ButtonPrint_ToolTip}"
                                          VerticalAlignment="Center"/>
                </Border>
            </Grid>
        </Border>
    </Grid>
</UserControl>
